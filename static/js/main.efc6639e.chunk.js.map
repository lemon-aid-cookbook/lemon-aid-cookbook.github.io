{"version":3,"sources":["ultis/functions.js","pages/SignIn/redux/actions.js","pages/SignIn/index.jsx","pages/Home/index.jsx","App.js","ultis/api.js","pages/SignIn/redux/epics.js","core/epic.js","pages/SignIn/redux/reducer.js","core/reducer.js","core/store.js","serviceWorker.js","index.js"],"names":["COLOR","SignInRequest","defineAction","SignInRequestSuccess","SignInRequestFailed","SignIn","useHistory","dispatch","useDispatch","validationSchema","yup","shape","username","required","password","matches","message","handleLogin","values","get","handleKeyPress","isValid","event","key","id","className","initialValues","isInitialValid","onSubmit","handleChange","handleBlur","handleSubmit","errors","setFieldTouched","touched","TextField","helperText","label","variant","value","onChange","onTouchStart","onBlur","onKeyPress","Button","disabled","style","backgroundColor","onClick","size","Home","history","push","App","exact","path","request","param","url","parameters","headers","accept","from","axios","timeout","method","data","pipe","map","result","status","tap","arg","console","info","i","indexOf","JSON","stringify","join","SysLog","log","authEpics","combineEpics","action$","ofType","type","exhaustMap","action","payload","catchError","error","rootEpic","initialState","jwt","rootReducer","combineReducers","Auth","state","epicMiddleware","createEpicMiddleware","applyMiddlewareDev","applyMiddleware","logger","store","createStore","run","Boolean","window","location","hostname","match","theme","createMuiTheme","typography","fontFamily","ReactDOM","render","StrictMode","ThemeProvider","Provider","verticalAlign","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.efc6639e.chunk.js","sourcesContent":["export const DOMAIN = 'https://lemon-aid-backend.herokuapp.com/api'\r\nexport const __DEV__ = true;\r\nexport const COLOR = {\r\n  primary: '#6A961F',\r\n  deactiveGray: '#9B9B9B'\r\n}\r\n\r\nexport function log(...arg) {\r\n  if (__DEV__) {\r\n    console.info(\r\n      arg\r\n        .map((i) =>\r\n          ['string', 'number'].indexOf(typeof i) === -1 ? JSON.stringify(i, null, ' ') : i,\r\n        )\r\n        .join(' '),\r\n    );\r\n  }\r\n}\r\n","import { defineAction } from 'redux-typed-actions'\r\n\r\nexport const SignInRequest = defineAction('SIGNIN_REQUEST')\r\nexport const SignInRequestSuccess = defineAction('SIGNIN_REQUEST_SUCCESS')\r\nexport const SignInRequestFailed = defineAction('SIGNIN_REQUEST_FAILED')\r\n","import { Form, Formik } from \"formik\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { COLOR } from \"ultis/functions\";\r\nimport * as yup from \"yup\";\r\nimport \"./signin.css\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { SignInRequest } from \"./redux/actions\";\r\n\r\nfunction SignIn() {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch()\r\n  const validationSchema = yup.object().shape({\r\n    username: yup.string().required(\"* Vui lòng nhập tên đăng nhập\"),\r\n    password: yup\r\n      .string()\r\n      .required(\"* Vui lòng nhập mật khẩu\")\r\n      .matches(/(?=.{8,})/, {\r\n        message: \"Mật khẩu phải gồm 8 kí tự\",\r\n      }),\r\n  });\r\n\r\n  const handleLogin = (values) => {\r\n    dispatch(SignInRequest.get(values))\r\n  };\r\n\r\n  const handleKeyPress = (isValid, event, values) => {\r\n    if (isValid && event.key === \"Enter\") {\r\n      handleLogin(values);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div id=\"loginBg\">\r\n      <span className=\"dimoName\">Lemon-aid</span>\r\n      <div id=\"loginBox\">\r\n        <span id=\"loginStyle\">Đăng nhập</span>\r\n        <Formik\r\n          initialValues={{ username: \"\", password: \"\" }}\r\n          isInitialValid={false}\r\n          validationSchema={validationSchema}\r\n          onSubmit={(values) => handleLogin(values)}\r\n        >\r\n          {({\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            values,\r\n            isValid,\r\n            errors,\r\n            touched,\r\n            setFieldTouched,\r\n          }) => {\r\n            return (\r\n              <Form>\r\n                <TextField\r\n                  id={\r\n                    errors.username\r\n                      ? \"outlined-error-helper-text\"\r\n                      : \"outlined-required\"\r\n                  }\r\n                  helperText={errors.username && errors.username}\r\n                  label=\"Tên đăng nhập\"\r\n                  variant=\"outlined\"\r\n                  value={values.username}\r\n                  onChange={handleChange(\"username\")}\r\n                  onTouchStart={() => setFieldTouched(\"username\")}\r\n                  onBlur={handleBlur(\"username\")}\r\n                  onKeyPress={(event) => handleKeyPress(isValid, event, values)}\r\n                />\r\n                <TextField\r\n                  id={\r\n                    errors.password\r\n                      ? \"outlined-error-helper-text\"\r\n                      : \"outlined-password-input\"\r\n                  }\r\n                  helperText={errors.password && errors.password}\r\n                  label=\"Mật khẩu\"\r\n                  variant=\"outlined\"\r\n                  onChange={handleChange(\"password\")}\r\n                  onTouchStart={() => setFieldTouched(\"password\")}\r\n                  value={values.password}\r\n                  onBlur={handleBlur(\"password\")}\r\n                  onKeyPress={(event) => handleKeyPress(isValid, event, values)}\r\n                />\r\n                <Button\r\n                  id=\"loginBtn\"\r\n                  disabled={!isValid}\r\n                  style={{\r\n                    backgroundColor: isValid\r\n                      ? COLOR.primary\r\n                      : COLOR.deactiveGray,\r\n                  }}\r\n                  onClick={handleSubmit}\r\n                  size={\"large\"}\r\n                >\r\n                  Đăng nhập\r\n                </Button>\r\n              </Form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nfunction Home() {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        onClick={() => history.push('signin')}\r\n        size={\"large\"}\r\n      >\r\n        Đăng nhập\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import SignIn from \"pages/SignIn\";\nimport React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Home from \"pages/Home\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route path=\"/signin\">\n          <SignIn />\n        </Route>\n        <Route path=\"/signup\">\n          <SignIn />\n        </Route>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import axios from 'axios';\r\nimport { from } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { DOMAIN, log as SysLog, __DEV__ } from 'ultis/functions';\r\n\r\nexport function request(param) {\r\n  let url = `${DOMAIN}/${param.url}`\r\n\r\n  const language = 'vi';\r\n  const parameters = param.param;\r\n  const headers = {\r\n    'Content-Type': 'application/json',\r\n    accept: 'application/json',\r\n    \"Access-Control-Allow-Origin\": true,\r\n    'Accept-Language': language\r\n  }\r\n\r\n  return from(\r\n    axios.request({\r\n      url,\r\n      timeout: 10000,\r\n      headers,\r\n      method: param.method || 'POST',\r\n      data: parameters\r\n    }),\r\n  ).pipe(\r\n    map((result) => {\r\n      return { result: result.data.result, status: result.status };\r\n    }),\r\n    tap((result) => log(url, parameters, result)),\r\n  );\r\n}\r\n\r\nfunction log(url, parameters, result) {\r\n  SysLog(\r\n    '--------------------------\\n',\r\n    // '\\x1b[34m',\r\n    'Request data:',\r\n    // '\\x1b[37m',\r\n    '\\nURL:           ',\r\n    // '\\x1b[32m',\r\n    url,\r\n    // '\\x1b[37m',\r\n    '\\nParam:         ',\r\n    // '\\x1b[32m',\r\n    JSON.stringify(parameters, null, '\\x1b[32m'),\r\n    // '\\x1b[37m',\r\n    '\\nResponse Data: ',\r\n    // '\\x1b[32m',\r\n    JSON.stringify(result, null, '\\x1b[32m') || true,\r\n    // '\\x1b[37m',\r\n    '\\n--------------------------',\r\n  );\r\n}\r\n","import { combineEpics, ofType } from \"redux-observable\";\r\nimport { catchError, exhaustMap, map } from \"rxjs/operators\";\r\nimport { request } from \"ultis/api\";\r\nimport {\r\n  SignInRequestFailed,\r\n  SignInRequest,\r\n  SignInRequestSuccess,\r\n} from \"./actions\";\r\n\r\nconst signinEpic$ = (action$) =>\r\n  action$.pipe(\r\n    ofType(SignInRequest.type),\r\n    exhaustMap((action) => {\r\n      return request({\r\n        method: \"POST\",\r\n        url: \"signin\",\r\n        param: action.payload,\r\n      }).pipe(\r\n        map((result) => {\r\n          if (result.status === 200) {\r\n            return SignInRequestSuccess.get(result.result);\r\n          }\r\n          return SignInRequestFailed.get(result);\r\n        }),\r\n        catchError((error) => {\r\n          return SignInRequestFailed.get(error);\r\n        })\r\n      );\r\n    })\r\n  );\r\n\r\nexport const authEpics = combineEpics(signinEpic$);\r\n","import { combineEpics } from \"redux-observable\";\r\nimport { authEpics } from \"pages/SignIn/redux/epics\";\r\n\r\nexport const rootEpic = combineEpics(authEpics);\r\n","import { SignInRequestSuccess } from \"./actions\";\r\nconst initialState = {\r\n  jwt: null,\r\n};\r\n\r\nexport function authReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SignInRequestSuccess.type:\r\n      return { ...state, jwt: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { authReducer } from \"pages/SignIn/redux/reducer\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  Auth: authReducer,\r\n});\r\n","import { applyMiddleware, createStore } from 'redux';\r\nimport logger from 'redux-logger';\r\nimport { createEpicMiddleware } from 'redux-observable';\r\nimport { rootEpic } from './epic';\r\nimport { rootReducer } from './reducer';\r\nimport { __DEV__ } from 'ultis/functions';\r\n\r\nconst epicMiddleware = createEpicMiddleware();\r\n\r\nconst applyMiddlewarePro = applyMiddleware(epicMiddleware);\r\nconst applyMiddlewareDev = applyMiddleware(logger, epicMiddleware);\r\n\r\nexport const store = createStore(rootReducer, __DEV__ ? applyMiddlewareDev : applyMiddlewarePro);\r\n\r\nepicMiddleware.run(rootEpic);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { store } from \"core/store\";\nimport { Provider } from \"react-redux\";\nimport { IconContext } from \"react-icons\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: [\n      \"Cabin\",\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(\",\"),\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <IconContext.Provider\n          value={{\n            className: \"react-icon-clasname\",\n            style: { verticalAlign: \"middle\" },\n          }}\n        >\n          <App />\n        </IconContext.Provider>\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}